diff --git a/config.def.h b/config.def.h
index d03bf4f..8f8fbed 100644
--- a/config.def.h
+++ b/config.def.h
@@ -13,19 +13,19 @@ static const float smfact                = 0.00; /* factor of tiled clients [0.0
 
 
 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int borderpx  = 2;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showsystray        = 1;        /* 0 means no systray */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 static const Bool viewontag         = True;     /* Switch view on tag switch */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
-static const char col_gray1[]       = "#222222";
+static const char *fonts[]          = { "JetBrainsMono Nerd Font Mono:10" };
+static const char dmenufont[]       = "JetBrainsMono Nerd Font Mono:10";
+static const char col_gray1[]       = "#181818";
 static const char col_gray2[]       = "#444444";
 static const char col_gray3[]       = "#bbbbbb";
 static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
+static const char col_cyan[]        = "#f05577";
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
@@ -40,11 +40,23 @@ static const Rule rules[] = {
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class     instance  title           tags mask  isfloating  isterminal  noswallow isfakefullscreen switchtotag monitor */
-	{ "Gimp",    NULL,     NULL,           0,         1,          0,           0,         0,             1,            -1 },
-	{ "Firefox", NULL,     NULL,           1 << 8,    0,          0,          -1,         1,             1,            -1 },
-	{ "St",      NULL,     NULL,           0,         0,          1,           0,         0,             1,            -1 },
-	{ NULL,      NULL,     "Event Tester", 0,         0,          0,           1,         0,             0,            -1 }, /* xev */
+	/* class                    instance        title                tags mask isfloating isterminal noswallow isfakefullscreen switchtotag monitor */
+	{ "Gimp",                   NULL,           NULL,                 1 << 7,   1,         0,         0,        0,               1,            -1 },
+	{ "St",                     NULL,           NULL,                 0,        0,         1,         1,        0,               1,            -1 },
+	{ "org.gnome.Nautilus",     NULL,           NULL,                 1 << 1,   1,         0,         0,        0,               1,            -1 },
+	{ "Subl4",                  NULL,           NULL,                 1 << 4,   1,         0,         0,        0,               1,            -1 },
+	{ "iwgtk",                  NULL,           NULL,                 0,        1,         0,         0,        0,               1,            -1 },
+	{ "Vlc",                    NULL,           NULL,                 0,        1,         0,         0,        1,               1,            -1 },
+	{ "mpv",                    NULL,           NULL,                 0,        1,         0,         0,        1,               1,            -1 },
+	{ "libreoffice-startcenter",NULL,           NULL,                 1 << 1,   1,         0,         0,        0,               1,            -1 },
+	{ "jetbrains-pycharm-ce",   NULL,           NULL,                 1 << 7,   0,         0,         0,        0,               1,            -1 },
+	{ "Matplotlib",             NULL,           NULL,                 0,        1,         0,         0,        0,               1,            -1 },
+	{ "Cursor",                "cursor",        NULL,                 1 << 6,   0,         0,         0,        0,               1,            -1 },
+	{ "Brave-browser",         "brave-browser", NULL,                 1 << 3,   0,         0,         0,        1,               1,            -1 },
+	{ "Firefox",               "Navigator",    "Mozilla Firefox",     1 << 3,   0,         0,         0,        1,               1,            -1 },
+	{ "Firefox",               "Toolkit",      "Picture-in-Picture",  1 << 3,   1,         0,         0,        1,               1,            -1 },
+	{ NULL,                     NULL,          "LibreOffice",         1 << 1,   0,         0,         0,        0,               1,            -1 },
+	{ NULL,                     NULL,          "Event Tester",        0,        0,         0,         1,        0,               0,            -1 },
 };
 
 /* layout(s) */
@@ -61,7 +73,7 @@ static const Layout layouts[] = {
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -72,32 +84,36 @@ static const Layout layouts[] = {
 #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
 
 /* commands */
-static const char *dmenucmd[] = { "dmenu_run", "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
+static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
 static const char *termcmd[]  = { "st", NULL };
 
 static const Key keys[] = {
 	/* modifier                     key        function        argument */
 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, newterm,        {.v = termcmd } },
+	{ MODKEY,                       XK_Return, newterm,        {.v = termcmd } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
+
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
+	{ MODKEY|ShiftMask,             XK_j,      pushdown,       {0} },
+	{ MODKEY|ShiftMask,             XK_k,      pushup,         {0} },
+
 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
 	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
 	{ MODKEY|ShiftMask,             XK_h,      setsmfact,      {.f = +0.05} },
 	{ MODKEY|ShiftMask,             XK_l,      setsmfact,      {.f = -0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
+
+    	{ MODKEY,                       XK_s,      togglesticky,   {0} },
+	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
+	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
+	{ MODKEY|ShiftMask,             XK_Return, zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
+	{ MODKEY|ShiftMask,             XK_q,      killclient,     {0} },
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_space,  setlayout,      {0} },
-	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
-	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
-	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
+	{ MODKEY,                       XK_space,  togglefloating, {0} },
 	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
 	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
 	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
@@ -111,7 +127,7 @@ static const Key keys[] = {
 	TAGKEYS(                        XK_7,                      6)
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	{ MODKEY|ShiftMask,             XK_r,      quit,           {0} },
 };
 
 /* button definitions */
diff --git a/dot_config.diff b/dot_config.diff
index 58fa7b6..e69de29 100644
--- a/dot_config.diff
+++ b/dot_config.diff
@@ -1,122 +0,0 @@
-diff --git a/config.def.h b/config.def.h
-index d03bf4f..40af1e0 100644
---- a/config.def.h
-+++ b/config.def.h
-@@ -13,19 +13,19 @@ static const float smfact                = 0.00; /* factor of tiled clients [0.0
- 
- 
- /* appearance */
--static const unsigned int borderpx  = 1;        /* border pixel of windows */
-+static const unsigned int borderpx  = 2;        /* border pixel of windows */
- static const unsigned int snap      = 32;       /* snap pixel */
- static const int showsystray        = 1;        /* 0 means no systray */
- static const int showbar            = 1;        /* 0 means no bar */
- static const int topbar             = 1;        /* 0 means bottom bar */
- static const Bool viewontag         = True;     /* Switch view on tag switch */
--static const char *fonts[]          = { "monospace:size=10" };
--static const char dmenufont[]       = "monospace:size=10";
--static const char col_gray1[]       = "#222222";
-+static const char *fonts[]          = { "JetBrainsMono Nerd Font Mono:10" };
-+static const char dmenufont[]       = "JetBrainsMono Nerd Font Mono:10";
-+static const char col_gray1[]       = "#181818";
- static const char col_gray2[]       = "#444444";
- static const char col_gray3[]       = "#bbbbbb";
- static const char col_gray4[]       = "#eeeeee";
--static const char col_cyan[]        = "#005577";
-+static const char col_cyan[]        = "#f05577";
- static const char *colors[][3]      = {
- 	/*               fg         bg         border   */
- 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-@@ -40,11 +40,22 @@ static const Rule rules[] = {
- 	 *	WM_CLASS(STRING) = instance, class
- 	 *	WM_NAME(STRING) = title
- 	 */
--	/* class     instance  title           tags mask  isfloating  isterminal  noswallow isfakefullscreen switchtotag monitor */
--	{ "Gimp",    NULL,     NULL,           0,         1,          0,           0,         0,             1,            -1 },
--	{ "Firefox", NULL,     NULL,           1 << 8,    0,          0,          -1,         1,             1,            -1 },
--	{ "St",      NULL,     NULL,           0,         0,          1,           0,         0,             1,            -1 },
--	{ NULL,      NULL,     "Event Tester", 0,         0,          0,           1,         0,             0,            -1 }, /* xev */
-+	/* class                    instance        title                tags mask isfloating isterminal noswallow isfakefullscreen switchtotag monitor */
-+	{ "Gimp",                   NULL,           NULL,                 1 << 7,   1,         0,         0,        0,               1,            -1 },
-+	{ "St",                     NULL,           NULL,                 0,        0,         1,         1,        0,               1,            -1 },
-+	{ "org.gnome.Nautilus",     NULL,           NULL,                 1 << 1,   1,         0,         0,        0,               1,            -1 },
-+	{ "Subl4",                  NULL,           NULL,                 1 << 4,   1,         0,         0,        0,               1,            -1 },
-+	{ "iwgtk",                  NULL,           NULL,                 0,        1,         0,         0,        0,               1,            -1 },
-+	{ "Vlc",                    NULL,           NULL,                 0,        1,         0,         0,        1,               1,            -1 },
-+	{ "mpv",                    NULL,           NULL,                 0,        1,         0,         0,        1,               1,            -1 },
-+	{ "libreoffice-startcenter",NULL,           NULL,                 1 << 1,   1,         0,         0,        0,               1,            -1 },
-+	{ "jetbrains-pycharm-ce",   NULL,           NULL,                 1 << 7,   0,         0,         0,        0,               1,            -1 },
-+	{ "Cursor",                "cursor",        NULL,                 1 << 6,   0,         0,         0,        0,               1,            -1 },
-+	{ "Brave-browser",         "brave-browser", NULL,                 1 << 3,   0,         0,         0,        1,               1,            -1 },
-+	{ "Firefox",               "Navigator",    "Mozilla Firefox",     1 << 3,   0,         0,         0,        1,               1,            -1 },
-+	{ "Firefox",               "Toolkit",      "Picture-in-Picture",  1 << 3,   1,         0,         0,        1,               1,            -1 },
-+	{ NULL,                     NULL,          "LibreOffice",         1 << 1,   0,         0,         0,        0,               1,            -1 },
-+	{ NULL,                     NULL,          "Event Tester",        0,        0,         0,         1,        0,               0,            -1 },
- };
- 
- /* layout(s) */
-@@ -61,7 +72,7 @@ static const Layout layouts[] = {
- };
- 
- /* key definitions */
--#define MODKEY Mod1Mask
-+#define MODKEY Mod4Mask
- #define TAGKEYS(KEY,TAG) \
- 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
- 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
-@@ -72,32 +83,36 @@ static const Layout layouts[] = {
- #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
- 
- /* commands */
--static const char *dmenucmd[] = { "dmenu_run", "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
-+static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
- static const char *termcmd[]  = { "st", NULL };
- 
- static const Key keys[] = {
- 	/* modifier                     key        function        argument */
- 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
--	{ MODKEY|ShiftMask,             XK_Return, newterm,        {.v = termcmd } },
-+	{ MODKEY,                       XK_Return, newterm,        {.v = termcmd } },
- 	{ MODKEY,                       XK_b,      togglebar,      {0} },
-+
- 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
- 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
--	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
--	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-+	{ MODKEY|ShiftMask,             XK_j,      pushdown,       {0} },
-+	{ MODKEY|ShiftMask,             XK_k,      pushup,         {0} },
-+
- 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
- 	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
- 	{ MODKEY|ShiftMask,             XK_h,      setsmfact,      {.f = +0.05} },
- 	{ MODKEY|ShiftMask,             XK_l,      setsmfact,      {.f = -0.05} },
--	{ MODKEY,                       XK_Return, zoom,           {0} },
-+
-+    	{ MODKEY,                       XK_s,      togglesticky,   {0} },
-+	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-+	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-+	{ MODKEY|ShiftMask,             XK_Return, zoom,           {0} },
- 	{ MODKEY,                       XK_Tab,    view,           {0} },
--	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-+	{ MODKEY|ShiftMask,             XK_q,      killclient,     {0} },
- 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
- 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
- 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
--	{ MODKEY,                       XK_space,  setlayout,      {0} },
--	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
--	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
--	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
-+	{ MODKEY,                       XK_space,  togglefloating, {0} },
- 	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
- 	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
- 	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
-@@ -111,7 +126,7 @@ static const Key keys[] = {
- 	TAGKEYS(                        XK_7,                      6)
- 	TAGKEYS(                        XK_8,                      7)
- 	TAGKEYS(                        XK_9,                      8)
--	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
-+	{ MODKEY|ShiftMask,             XK_r,      quit,           {0} },
- };
- 
- /* button definitions */
